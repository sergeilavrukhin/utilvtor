version: '3.4'

services:
  backend:
    build:
      context: ./
      dockerfile: docker/flask
    container_name: uv_backend
    environment:
      - FLASK_APP=app:backend_app
      - TZ=Asia/Yekaterinburg
    restart: always
    command: [ "gunicorn", "-w", "2", "-b", "0.0.0.0:5000", "app:backend_app", "--timeout", "90" ]
    volumes:
      - ./src/flask:/code
    network_mode: host

  celery:
    build:
      context: ./
      dockerfile: docker/flask
    container_name: uv_celery
    environment:
      - FLASK_APP=app:celery_app
      - TZ=Asia/Yekaterinburg
    restart: always
    command: [ "celery", "-A", "app", "worker", "-l", "info" ]
    volumes:
      - ./src/flask:/code
    network_mode: host

  redis:
    image: "redis:4.0.11-alpine"
    container_name: uv_redis
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redisdata:/data
      - ./src/redis/redis.conf:/usr/local/etc/redis/redis.conf
    network_mode: host

volumes:
  redisdata: